name: Beta builds

on:
  push:
    branches:
      - 'beta/**'


jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: |
            python -m pip install --upgrade pip
            pip install setuptools jinja2 ruamel-yaml mock wheel pytest build twine flake8
            pip install -r tests/requirements.txt

      - name: Lint with flake8
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        env:
          PYTHONPATH: src
        run: |
          pytest --junitxml=junit/test-results-${{ matrix.python-version }}.xml tests

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: junit/test-results-${{ matrix.python-version }}.xml
        # Use always() to always run this step to publish test results when there are test failures
        if: always()

      - name: Build packages
        env:
          PYTHONPATH: src
          MYVERSION: ${{ format('{0}{1}{2}', github.head_ref, 'b', github.run_number) }} 
          MYHASH: ${{ github.sha }}
        run: |
          python -m build

      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: wheel-build-${{ matrix.python-version }}
          path: dist/*
  

