name: Master build

on:
  push:
    branches:
      - master

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.6", "3.7", "3.8", "3.9",]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Dump env
        shell: bash
        env:
          GITHUB_DUMP: ${{ toJson(github) }}
        run: |
          echo "github env:"
          echo "$GITHUB_DUMP"

      - name: Set up Python interpreter [${{ matrix.python-version }}]
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        shell: bash
        run: |
            python -m pip install --upgrade pip
            pip install setuptools setuptools-github build wheel twine
            pip install -r tests/requirements.txt

      - name: Lint with flake8
        shell: bash
        env:
          PYTHONPATH: src
        run: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 src --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test and coverage
        shell: bash
        env:
          PYTHONPATH: src
          OUTDIR: build/qa-${{ matrix.python-version }}
        run: |
          py.test \
              --cov=click.plus \
              --cov-report=html:$OUTDIR/coverage \
              --junitxml=$OUTDIR/junit/junit.xml --html=$OUTDIR/junit/junit.html --self-contained-html \
            tests

      - name: Static check
        shell: bash
        env:
          PYTHONPATH: src
          OUTDIR: build/qa-${{ matrix.python-version }}
        run: |
          mypy src \
            --no-incremental --xslt-html-report $OUTDIR/mypy

      - name: Upload pytest test results
        uses: actions/upload-artifact@v2
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: build/qa-${{ matrix.python-version }}
        # Use always() to always run this step to publish test results when there are test failures
        if: always()

